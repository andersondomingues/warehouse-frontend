name: Deploy to TEST env.

on:
  push:
    branches: [ test ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:

    - name: Acquire source code
      uses: actions/checkout@v2
    
    - name: Setup AWS login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Perform AWS login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Dockerize and push to AWS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: warehouse-frontend-test
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG --build-arg backend_url=${{ secrets.BACKEND_URL_TEST }} . 
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    - name: Prepare Deploy script
      run: |
        curl -o Dockerrun.aws.json https://raw.githubusercontent.com/andersondomingues/warehouse-frontend/test/scripts/Dockerrun.aws.json-test
        zip -r script.zip Dockerrun.aws.json

    - name: Deploy to beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID_EBS }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_EBS }}
        application_name: warehouse-frontend-test
        environment_name: Warehousefrontendtest-env
        use_existing_version_if_available: true
        version_label: ${{ github.run_id }}
        region: sa-east-1
        deployment_package: script.zip
        